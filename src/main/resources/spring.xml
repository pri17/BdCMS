<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:context="http://www.springframework.org/schema/context"       xmlns:mongo="http://www.springframework.org/schema/data/mongo"       xsi:schemaLocation="http://www.springframework.org/schema/beans			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd			http://www.springframework.org/schema/context			http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">    <!-- 加载配置文件 -->    <context:property-placeholder location="classpath:config.properties"/>    <!-- 扫描service自动注入为bean -->    <context:component-scan base-package="com.bidanet.bdcms" />    <import resource="spring-mvc.xml"/>    <import resource="spring-hibernate.xml"/>    <import resource="spring-mongodb.xml"/>    <import resource="spring-time-task.xml"/>    <context:annotation-config></context:annotation-config>    <!--<bean id="eventBus" class="com.google.common.eventbus.EventBus"/>-->    <!--<bean id="asyncEventBus" class="com.google.common.eventbus.AsyncEventBus"  >-->        <!--<constructor-arg ref="executorsFactory"/>-->    <!--</bean>-->    <!--<bean id="executorsFactory" class="java.util.concurrent.Executors"-->          <!--factory-method="newCachedThreadPool"></bean>-->    <!--<bean id="executorFactory" class="com.bidanet.bdcms.driver.eventbus.ExecutorFactory" />-->    <!--<bean id="executor" factory-bean="executorFactory" factory-method="getExecutorService"></bean>-->    <!--<bean id="asyncEventBus" class="com.google.common.eventbus.AsyncEventBus">-->        <!--<constructor-arg ref="executor" />-->    <!--</bean>--><!--bean-->    <!--<bean id="creator" class="org.rribbit.creation.SpringBeanClassBasedListenerObjectCreator">-->        <!--<property name="packageNames">-->            <!--<list>-->                <!--<value>com.bidanet.bdcms.subscribe</value>-->            <!--</list>-->        <!--</property>-->        <!--<property name="scanSubpackages" value="true"/>-->    <!--</bean>-->    <!--<bean id="RRiBbit" class="org.rribbit.util.RRiBbitUtil" factory-method="createRequestResponseBusForLocalUse">-->        <!--<constructor-arg ref="creator" />-->        <!--<constructor-arg value="true" />-->    <!--</bean>-->    <!--<bean id="eventBusExecutor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool">-->    <!--</bean>-->    <!--<bean id="achievementTask" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->        <!--<property name="jobClass" value="com.bidanet.achedusys.task.RecommendAchievementTask"/>-->    <!--</bean>-->    <!--<bean name="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">-->        <!--<property name="jobDetail" ref="achievementTask"/>-->        <!--<property name="repeatInterval" value="1000"/>-->        <!--<property name="repeatCount" value="100"/>-->    <!--</bean>-->    <!--<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->        <!--<property name="triggers">-->            <!--<ref bean="simpleTrigger"/>-->        <!--</property>-->    <!--</bean>-->    <!--<bean id="cache.redis" class="com.bidanet.bdcms.driver.cache.RedisCache" init-method="init" destroy-method="close">-->        <!--<property name="host" value="${redis.host}"></property>-->        <!--<property name="pwd" value="${redis.pwd}"></property>-->    <!--</bean>-->    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">        <property name="maxIdle" value="2000"/> <!--最大能够保持idel状态的对象数-->        <property name="maxTotal" value="60000"/><!--最大分配的对象数-->        <property name="testOnBorrow" value="true"/><!--当调用borrow Oject方法时，是否进行有效性检查-->    </bean>    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">        <constructor-arg index="0" name="poolConfig" ref="jedisPoolConfig"/>        <constructor-arg index="1" name="host" value="${redis.host}"/>        <constructor-arg index="2" name="port" value="${redis.port}" type="int" />        <constructor-arg index="3" name="timeout" value="${redis.timeout}" type="int" />        <constructor-arg index="4" name="password" value="${redis.pwd}"/>        <!--<constructor-arg index="5" value="${redis.db}" type="int"/>-->    </bean>    <bean class="com.bidanet.bdcms.common.ConfigInfo">        <property name="fileDomain" value="${domain.root}"/>        <property name="fileDomainWei" value="${image.wei}"/>        <property name="qrCodeAddress" value="${qrcode.address}"/>    </bean>    <!--定时器配置-->    <!--<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->        <!--<property name="triggers">-->            <!--<list>-->                <!--<ref bean="taskTrigger" />-->            <!--</list>-->        <!--</property>-->    <!--</bean>-->    <!--<bean id="taskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->        <!--<property name="jobDetail" ref="taskJobDetail"/>-->        <!--<property name="cronExpression" value="0 0 00 * * ?" />  &lt;!&ndash;每天24点执行&ndash;&gt;-->    <!--</bean>-->    <!--<bean id="taskJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->        <!--<property name="targetObject" ref="taskJob" />-->        <!--<property name="targetMethod" value="execute" />-->        <!--<property name="concurrent" value="false" />-->        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->    <!--</bean>-->    <!--<bean id="taskJob" class="com.bidanet.bdcms.task.TimeTask" />--></beans>